---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Sidebar from "../components/Sidebar.astro";
import "../styles/advancepost.css";

type Props = CollectionEntry<"advance">["data"];

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  category,
  author,
  tags,
} = Astro.props;
const categoryDisplay = category
  ? category.charAt(0).toUpperCase() + category.slice(1)
  : "";
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body>
    <Header />
    <div class="layout-container">
      <Sidebar />
      <main>
        <article>
          <div class="hero-image">
            {
              heroImage && (
                <Image
                  src={heroImage?.src}
                  alt={heroImage?.alt || "Hero image for the blog post"}
                  width={960}
                  height={480}
                  format="webp"
                  quality="high"
                />
              )
            }
          </div>
          <div class="prose">
            {
              categoryDisplay && (
                <div class="category">Category: {categoryDisplay}</div>
              )
            }
            {
              tags && tags.length > 0 && (
                <div class="tags">
                  {tags.map((tag) => (
                    <span class="tag">#{tag}</span>
                  ))}
                </div>
              )
            }
            {
              author && (
                <div class="author">
                  By {author.name}
                  {author.nickname && ` (${author.nickname})`}
                  {author.url && (
                    <>
                      {" â€¢ "}
                      <a
                        href={author.url}
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        {new URL(author.url).hostname.replace("www.", "")}
                      </a>
                    </>
                  )}
                </div>
              )
            }
            <div class="title">
              <div class="date">
                Published: <FormattedDate date={pubDate} />
                {
                  updatedDate && (
                    <div class="last-updated-on">
                      Last updated on <FormattedDate date={updatedDate} />
                    </div>
                  )
                }
              </div>
              <h1>{title}</h1>
              <hr />
            </div>
            <slot />
          </div>
        </article>
      </main>
    </div>
    <Footer />
  </body>
</html>
