---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Sidebar from "../components/Sidebar.astro";

type Props = CollectionEntry<"advance">["data"];

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  category,
  author,
  tags,
} = Astro.props;
const categoryDisplay = category
  ? category.charAt(0).toUpperCase() + category.slice(1)
  : "";
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      .layout-container {
        display: flex;
        min-height: 100vh;
        padding-top: 15px; /* 15px under the header container */
      }

      main {
        width: calc(100% - 160px);
        max-width: 100%;
        margin: 0 0 0 160px;
        padding: 1em;
      }
      .hero-image {
        width: 80%;
        height: auto;
        max-width: calc(100% - 2em);
        margin: 0 8% 0 18%;
        padding: 1em 0;
        border-radius: 8px;
        transform: translateX(20px);
      }
      .hero-image img {
        width: 80%;
        max-width: calc(100% - 2em);
        height: auto;
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
      }
      .prose {
        width: 74%;
        max-width: calc(100% - 1em);
        margin: 0 2em 0 auto;
        padding: 1.5em;
        color: rgb(var(--gray-dark));
      }
      .prose :global(img) {
        width: 75%;
        height: auto;
        display: block;
        margin: 2rem auto;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray));
      }
      .last-updated-on {
        font-style: italic;
      }
      .category {
        text-align: center;
        color: rgb(var(--gray-dark));
        font-size: 0.9em;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        margin-bottom: 0.5em;
      }
      .author {
        text-align: center;
        color: rgb(var(--gray-dark));
        font-size: 0.9em;
        margin-bottom: 1em;
      }
      .author a {
        color: rgb(var(--accent));
        text-decoration: none;
      }
      .author a:hover {
        text-decoration: underline;
      }
      .tags {
        text-align: center;
        margin: 0.5em 0;
      }
      .tag {
        display: inline-block;
        margin: 0.2em;
        padding: 0.2em 0.8em;
        border-radius: 15px;
        background-color: rgb(var(--accent));
        color: rgb(var(--gray-dark));
        font-size: 0.85em;
      }

      @media (max-width: 768px) {
        .layout-container {
          flex-direction: column;
          padding-top: 25px;
        }
        main {
          width: 100%;
          margin: 0;
          padding: 0.75em;
        }
        .hero-image {
          padding: 0;
          margin: 0 0 0 2rem;
        }
        .hero-image img {
          margin: 1rem auto;
          width: 100%;
          max-width: 600px;
        }
        .prose {
          width: 100%;
          max-width: 100%;
          padding: 0.75em;
          padding-left: 5rem; /* Increase space for the hamburger icon */
          font-size: 16px;
          line-height: 1.6;
        }
        .prose h1 {
          font-size: 1.75rem;
          line-height: 1.3;
          margin-bottom: 0.75em;
        }
        .prose h2 {
          font-size: 1.5rem;
          line-height: 1.3;
          margin: 1.5em 0 0.75em;
        }
        .prose h3 {
          font-size: 1.25rem;
          line-height: 1.3;
          margin: 1.5em 0 0.75em;
        }
        .prose p {
          margin-bottom: 1em;
        }
        .title {
          padding: 0.5em 0;
          margin-bottom: 0.75em;
        }
        .category {
          font-size: 0.85em;
          margin-bottom: 0.75em;
        }
      }
    </style>
  </head>

  <body>
    <Header />
    <div class="layout-container">
      <Sidebar postTitle={title} postCategory="advance" isPostPage={true} />
      <main>
        <article>
          <div class="hero-image">
            {
              heroImage && (
                <Image
                  src={heroImage?.src}
                  alt={heroImage?.alt || "Hero image for the blog post"}
                  width={960}
                  height={480}
                  format="webp"
                  quality="high"
                />
              )
            }
          </div>
          <div class="prose">
            {
              categoryDisplay && (
                <div class="category">Category: {categoryDisplay}</div>
              )
            }
            {
              tags && tags.length > 0 && (
                <div class="tags">
                  {tags.map((tag) => (
                    <span class="tag">#{tag}</span>
                  ))}
                </div>
              )
            }
            {
              author && (
                <div class="author">
                  By {author.name}
                  {author.nickname && ` (${author.nickname})`}
                  {author.url && (
                    <>
                      {" â€¢ "}
                      <a
                        href={author.url}
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        {new URL(author.url).hostname.replace("www.", "")}
                      </a>
                    </>
                  )}
                </div>
              )
            }
            <div class="title">
              <div class="date">
                Published: <FormattedDate date={pubDate} />
                {
                  updatedDate && (
                    <div class="last-updated-on">
                      Last updated on <FormattedDate date={updatedDate} />
                    </div>
                  )
                }
              </div>
              <h1>{title}</h1>
              <hr />
            </div>
            <slot />
          </div>
        </article>
      </main>
    </div>
    <Footer />
  </body>
</html>
