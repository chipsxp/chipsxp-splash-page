---
import Layout from "../layouts/FrontPage.astro";
import contactMan from "../assets/images/contact-man-on-floor.jpg";
import technoField from "../assets/images/techno-field.jpg";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { Image } from "astro:assets";

const title = `Contact - ${SITE_TITLE}`;
const author = {
  name: "Jimmy Burns",
  url: "https://chipsxp.com",
};
---

<Layout
  title={title}
  description={SITE_DESCRIPTION}
  pubDate={new Date()}
  heroImage={{
    src: contactMan,
    alt: "Contact the Developers",
  }}
  category="research"
  author={author}
>
  <div class="page-container">
    <h1>Contact the Developers</h1>
    <p class="description">
      In this ever-evolving digital landscape, I'm here to guide you through app
      development and website design processes with compassion and
      understanding. Together, we can build a robust online presence that
      reflects your brand's identity while providing an enjoyable experience for
      your visitors. <a href="/about"
        >Let's work together to turn your ideas into reality!</a
      >
    </p>

    <Image
      src={technoField}
      alt="Technology Field Illustration"
      width={720}
      height={400}
      class="content-image"
    />

    <p class="description">
      Have questions about our articles, research, and development? In app
      development and website design, it's important to consider the end-user's
      journey. By applying best practices in web design principles along with my
      technical skills, I aim to create engaging experiences that attract
      visitors and convert them into loyal customers. Together, we can craft a
      digital presence that empowers your small business and helps you thrive
      online. We'd love to hear from you and we will listen. Please, fill out
      the form below and we'll get back to you as soon as possible.
    </p>

    <div
      class="contact-form bg-white rounded-lg shadow-lg p-8 my-8 border border-gray-200"
    >
      <form id="contactForm" class="space-y-6">
        <div class="form-group">
          <label
            for="readerName"
            class="block text-sm font-medium text-gray-700 mb-1"
            >Reader's Name</label
          >
          <input
            type="text"
            id="readerName"
            name="readerName"
            required
            placeholder="Your name"
            class="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"
          />
        </div>
        <div class="form-group">
          <label
            for="authorName"
            class="block text-sm font-medium text-gray-700 mb-1"
            >Author's Name</label
          >
          <input
            type="text"
            id="authorName"
            name="authorName"
            required
            placeholder="Which developer are you trying to reach?"
            class="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"
          />
        </div>
        <div class="form-group">
          <label
            for="email"
            class="block text-sm font-medium text-gray-700 mb-1">Email</label
          >
          <input
            type="email"
            id="email"
            name="email"
            required
            placeholder="your.email@example.com"
            class="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"
          />
        </div>
        <div class="form-group">
          <label
            for="subject"
            class="block text-sm font-medium text-gray-700 mb-1">Subject</label
          >
          <input
            type="text"
            id="subject"
            name="subject"
            required
            placeholder="What's this about?"
            class="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"
          />
        </div>
        <div class="form-group">
          <label for="body" class="block text-sm font-medium text-gray-700 mb-1"
            >Message</label
          >
          <textarea
            id="body"
            name="body"
            required
            placeholder="Your message here..."
            class="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 min-h-[150px]"
          ></textarea>
        </div>
        <div class="flex justify-center">
          <button
            type="submit"
            class="submit-button px-6 py-3 bg-blue-600 text-white font-medium rounded-md shadow-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors"
          >
            Send Message
          </button>
        </div>
        <div
          id="formStatus"
          class="mt-4 text-center hidden px-4 py-3 rounded-md"
        >
        </div>
      </form>
    </div>
  </div>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById(
      "contactForm"
    ) as HTMLFormElement | null;
    const formStatus = document.getElementById("formStatus");

    if (form) {
      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        // Show loading state
        const submitButton = form.querySelector(".submit-button");
        const originalText = submitButton?.textContent;
        if (submitButton) submitButton.textContent = "Sending...";
        if (submitButton instanceof HTMLButtonElement) {
          submitButton.disabled = true;
        }

        try {
          const formData = new FormData(form);
          const response = await fetch("/api/send-contact", {
            method: "POST",
            body: formData,
          });

          const result = await response.json();

          // Display result
          if (formStatus) {
            formStatus.textContent = result.message;
            formStatus.className = `mt-4 text-center ${result.success ? "text-green-600" : "text-red-600"}`;
            formStatus.classList.remove("hidden");
          }

          // Reset form if successful
          if (result.success) {
            form.reset();
          }
        } catch (error) {
          console.error("Error:", error);
          if (formStatus) {
            formStatus.textContent = "An error occurred. Please try again.";
            formStatus.className = "mt-4 text-center text-red-600";
            formStatus.classList.remove("hidden");
          }
        } finally {
          // Restore button
          if (submitButton) {
            submitButton.textContent = originalText ?? "";
            if (submitButton instanceof HTMLButtonElement) {
              submitButton.disabled = false;
            }
          }
        }
      });
    }
  });
</script>
