---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import Sidebar from "../../components/Sidebar.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import "../../styles/category.css";

type Category = "research" | "advance";

export async function getStaticPaths() {
  const researchPosts = await getCollection("research");
  const advancePosts = await getCollection("advance");
  const allPosts: CollectionEntry<"research" | "advance">[] = [
    ...researchPosts,
    ...advancePosts,
  ];
  const uniqueCategories = [
    ...new Set(allPosts.map((post) => post.data.category)),
  ] as Category[];

  return uniqueCategories.map((category) => ({
    params: { category: category.toLowerCase() },
    props: {
      category,
      posts: allPosts.filter((post) => post.data.category === category),
    },
  }));
}

const { category, posts } = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead
      title={`${category} Posts`}
      description={`All posts in category ${category}`}
    />
  </head>
  <body>
    <Header />
    <div class="layout-container">
      <Sidebar />
      <main>
        <div class="title">
          <h1>{category} Posts</h1>
        </div>
        <div class="posts-grid">
          {
            posts.map((post) => (
              <a href={`/${post.collection}/${post.id}`}>
                <div class="post-card">
                  <div class="post-date">
                    <FormattedDate date={post.data.pubDate} />
                  </div>
                  <h2 class="post-title">{post.data.title}</h2>
                  <p>{post.data.description}</p>
                </div>
              </a>
            ))
          }
        </div>
      </main>
    </div>
    <Footer />
  </body>
</html>
